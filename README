This is to build sdcard image for Raspberrypi5:

Parts needed:
1. Raspberry pi 5.
2. Sandisk 64GB SATA SSD with USB cable.
3. Sandisk 64GB micro sdcard.
4. Host PC with ubuntu 24.

Note: It looks like mainline kernel and uefi is not fully support rpi5 GPU yet. 
      Uefi boot requires universal mainline kernel without special config.txt and overlay.
      So stick with verdor kernel, config.txt, overlay and bootcode.bin for now. 
      When mainline kernel fully support rpi5 GPU then we can use uefi boot instead of config.txt, overlay and bootcode.bin.

Note: If keyboard/mouse USB dongle interfere with USB SATA SSD, put keyboard/mouse USB dongle in USB2 socket with USB extension cord.

Steps to build raspberrypi5 sdcard image:

1. git clone https://github.com/philipchen888/build-raspberrypi5.git
   sudo apt update
   sudo apt upgrade
   sudo apt-get install build-essential git libssl-dev nmap net-tools libncurses5-dev libncursesw5-dev dnsutils vsftpd ftp binfmt-support qemu-user-static scons libncurses5-dev libncursesw5-dev libdbus-glib-1-dev libbluetooth-dev python3-dev python3-pip python3-setuptools libcurl4-openssl-dev gettext dbus-x11 chrpath diffstat gawk texinfo curl flex bison device-tree-compiler swig libmpc-dev debootstrap debhelper kpartx gdisk devscripts isolinux po4a libgnutls28-dev mtools python-is-python3 python3-pyelftools gcc-aarch64-linux-gnu

2. Install live-build:
   sudo apt-get install debootstrap debhelper kpartx gdisk devscripts isolinux po4a

   For debian:
   wget https://launchpad.net/debian/+archive/primary/+sourcefiles/live-build/1:20230502/live-build_20230502.tar.xz
   tar xvf live-build_20230502.tar.xz
   cd live-build
   vi Makefile ( search Installing manpages, delete from after done before uninstall: )
   sudo make install
   lb --version ( 20230502 )

   For ubuntu-noble and ubuntu-oracular
   wget http://security.ubuntu.com/ubuntu/pool/main/l/live-build/live-build_3.0~a57-1ubuntu41.22.04.1_all.deb
   sudo dpkg -i live-build_3.0~a57-1ubuntu41.22.04.1_all.deb
   lb --version ( 3.0~a57-1 /usr/bin/lb )

3. cd ~/build-raspberrypi5/kernel ( Compile vendor's kernel )
   git clone https://github.com/raspberrypi/linux --depth=1 -b rpi-6.6.y --tag stable_20241120
   mv stable_20241120 linux
   vi ./linux/arch/arm64/configs/bcm2712_defconfig ( change CONFIG_I2C_CHARDEV=m to CONFIG_I2C_CHARDEV=y )
   \rm -rf out; mkdir out; 

   make kernel
   The result is in ./out/boot.img

4. cd ~/build-raspberrypi5/linux  ( Compile mainline kernel, still cannot boot rpi5 )
   wget https://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git/snapshot/linux-6.13-rc3.tar.gz
   tar -xzf linux-6.13-rc3.tar.gz
   mv linux-6.13-rc3 linux
   \rm -rf out; mkdir out;
   make kernel

   The result is in ./out/boot.img

5. cd ~/build-raspberrypi5/rootfs-bookworm  ( Compile debian bookworm rootfs )
   make rootfs
   The result is in ./linaro-rootfs.img
   make clean

6. cd ~/build-raspberrypi5/rootfs-ubuntu-noble  ( Compile ubuntu-noble rootfs )
   make rootfs
   The result is in ./linaro-rootfs.img
   make clean

7. cd ~/build-raspberrypi5/rootfs-ubuntu-oracular  ( Compile ubuntu-oracular rootfs )
   make rootfs
   The result is in ./linaro-rootfs.img
   make clean

8. cd ~/build-raspberrypi5/bookworm-gnome  ( Build debian bookworm gnome-desktop image )
   Plugin sdcard/USB2-SATA-SSD to PC.
   sudo ./mksdcardimg.sh
   Eject sdcard/USB2-SATA-SSD from PC.

9. cd ~/build-raspberrypi5/ubuntu-noble    ( Build ubuntu-noble image )
   Plugin sdcard/USB2-SATA-SSD to PC.
   sudo ./mksdcardimg.sh
   Eject sdcard/USB2-SATA-SSD from PC.

10. cd ~/build-raspberrypi5/ubuntu-oracular  ( Build ubuntu-oracular image )
    Plugin sdcard/USB2-SATA-SSD to PC.
    sudo ./mksdcardimg.sh
    Eject sdcard/USB2-SATA-SSD from PC.

11. cd ~/build-raspberrypi5/fedora           ( Build fedora image )

12. cd ~/build-raspberrypi5/ubuntu-uefi      ( Build ubuntu-uefi image )
