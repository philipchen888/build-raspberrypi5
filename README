This is to build sdcard image for Raspberrypi5:

Parts needed:
1. Raspberry pi 5.
2. Sandisk 64GB SATA SSD with USB cable.
3. Sandisk 64GB micro sdcard.
4. Host PC with ubuntu 24.
5. ASUS USB-BT500 bluetooth usb dongle.

Note: If keyboard/mouse USB dongle interfere with USB2-SATA-SSD, put keyboard/mouse USB dongle in USB3 socket with USB extension cord, put USB2-SATA-SSD in USB2 socket.

Steps to build raspberrypi5 sdcard image:

1. git clone https://github.com/philipchen888/build-raspberrypi5.git
   sudo apt update
   sudo apt upgrade
   sudo apt-get install build-essential git libssl-dev nmap net-tools libncurses5-dev libncursesw5-dev dnsutils vsftpd ftp binfmt-support qemu-user-static scons libncurses5-dev libncursesw5-dev libdbus-glib-1-dev libbluetooth-dev python3-dev python3-pip python3-setuptools libcurl4-openssl-dev gettext dbus-x11 chrpath diffstat gawk texinfo curl flex bison device-tree-compiler swig libmpc-dev debootstrap debhelper kpartx gdisk devscripts isolinux po4a libgnutls28-dev mtools python-is-python3 python3-pyelftools gcc-aarch64-linux-gnu

2. Install live-build:
   sudo apt-get install debootstrap debhelper kpartx gdisk devscripts isolinux po4a live-build

   lb --version ( 3.0~a57-1 /usr/bin/lb )

   For trixie and bookworm:
   wget http://deb.debian.org/debian/pool/main/l/live-build/live-build_20250505.tar.xz
   tar xvf live-build_20250505.tar.xz
   cd work
   sudo make install
   lb --version ( 20250505 /usr/bin/lb ) 

3. cd ~/build-raspberrypi5/uboot  ( Compile mainline u-boot, still cannot boot rpi5 yet )
   git clone --depth=1 -b master https://github.com/raspberrypi/firmware.git
   git clone --depth=1 -b master https://source.denx.de/u-boot/u-boot.git
   \rm -rf out; mkdir out;

   make u-boot
   The result is in ./u-boot/u-boot.bin
   make boot
   The result are in ./out/boot.img bootusb.img

4. cd ~/build-raspberrypi5/kernel ( Compile vendor's kernel )
   git clone https://github.com/raspberrypi/linux --depth=1 -b rpi-6.16.y
   vi ./linux/arch/arm64/configs/bcm2712_defconfig ( delete CONFIG_CMDLINE, change CONFIG_I2C_CHARDEV=m to CONFIG_I2C_CHARDEV=y )
   Use ovmerge to change bcm2712-rpi-5-b.dts to include some dtoverlay ( uart2, vc4, i2c, spi etc.).
   \rm -rf out; mkdir out; 

   make kernel
   The result is in ./out/boot.img

5. cd ~/build-raspberrypi5/linux  ( Compile mainline kernel, still cannot boot rpi5 yet )
   git clone https://github.com/torvalds/linux.git --depth=1 -b master
   \rm -rf out; mkdir out;
   make kernel

   The result is in ./out/boot.img

6. cd ~/build-raspberrypi5/rootfs-bookworm  ( Compile debian bookworm rootfs )
   make rootfs
   The results are in ./linaro-rootfs.img  linaro-esp.img
   make clean

7. cd ~/build-raspberrypi5/rootfs-weston    ( Compile debian bookworm weston rootfs )
   make rootfs
   The results are in ./linaro-rootfs.img  linaro-esp.img
   make clean

8. cd ~/build-raspberrypi5/rootfs-trixie    ( Compile debian trixie rootfs )
   make rootfs
   The results are in ./linaro-rootfs.img  linaro-esp.img
   make clean

9. cd ~/build-raspberrypi5/rootfs-ubuntu-noble      ( Compile ubuntu-noble rootfs )
   make rootfs
   The results are in ./linaro-rootfs.img  linaro-esp.img
   make clean

10. cd ~/build-raspberrypi5/rootfs-ubuntu-plucky    ( Compile ubuntu-plucky rootfs )
    make rootfs
    The results are in ./linaro-rootfs.img  linaro-esp.img
    make clean

11. cd ~/build-raspberrypi5/bookworm-gnome  ( Build debian bookworm gnome-desktop image )
    Plugin sdcard/USB2-SATA-SSD to PC.
    sudo ./mksdcardimg.sh
    sudo mount /dev/sda1 /mnt
    cd /mnt
    sudo 7z x ~/Downloads/RPi5_UEFI_Release_v0.3.zip
    cd ~/build-raspberrypi5/bookworm-gnome
    sync
    sudo umount /mnt
    Eject sdcard/USB2-SATA-SSD from PC.

12. cd ~/build-raspberrypi5/bookworm-weston ( Build debian bookworm weston-desktop image )
    Plugin sdcard/USB2-SATA-SSD to PC.
    sudo ./mksdcardimg.sh
    sudo mount /dev/sda1 /mnt
    cd /mnt
    sudo 7z x ~/Downloads/RPi5_UEFI_Release_v0.3.zip
    cd ~/build-raspberrypi5/bookworm-weston
    sync
    sudo umount /mnt
    sudo mount /dev/sda2 /mnt
    mkdir -p /mnt/home/linaro/.config
    vi /mnt/home/linaro/.config/weston.ini ( add
    [core]
    idle-time=0

    [shell]
    locking=false
    )
    sync
    sudo umount /mnt
    Eject sdcard/USB2-SATA-SSD from PC.

13. cd ~/build-raspberrypi5/trixie-gnome  ( Build debian trixie gnome-desktop image )
    Plugin sdcard/USB2-SATA-SSD to PC.
    sudo ./mksdcardimg.sh
    sudo mount /dev/sda1 /mnt
    cd /mnt
    sudo 7z x ~/Downloads/RPi5_UEFI_Release_v0.3.zip
    cd ~/build-raspberrypi5/trxie-gnome
    sync
    sudo umount /mnt
    Eject sdcard/USB2-SATA-SSD from PC.

14. cd ~/build-raspberrypi5/ubuntu-noble    ( Build ubuntu-noble image )
    Plugin sdcard/USB2-SATA-SSD to PC.
    sudo ./mksdcardimg.sh
    sudo mount /dev/sda1 /mnt
    cd /mnt
    sudo 7z x ~/Downloads/RPi5_UEFI_Release_v0.3.zip
    cd ~/build-raspberrypi5/ubuntu-noble
    sync
    sudo umount /mnt
    Eject sdcard/USB2-SATA-SSD from PC.

15. cd ~/build-raspberrypi5/ubuntu-plucky    ( Build ubuntu-plucky image )
    Plugin sdcard/USB2-SATA-SSD to PC.
    sudo ./mksdcardimg.sh
    sudo mount /dev/sda1 /mnt
    cd /mnt
    sudo 7z x ~/Downloads/RPi5_UEFI_Release_v0.3.zip
    cd ~/build-raspberrypi5/ubuntu-plucky
    sync
    sudo umount /mnt
    Eject sdcard/USB2-SATA-SSD from PC.

16. cd ~/build-raspberrypi5/fedora           ( Build fedora image )

17. cd ~/build-raspberrypi5/ubuntu-uefi      ( Build ubuntu-uefi image )

18. cd ~/build-raspberrypi5/yocto            ( Build yocto image )

19. cd ~/build-raspberrypi5/buildroot        ( Build buildroot image )

20. cd ~/build-raspberrypi5/bookworm-flightaware  ( Build flightaware image )

21. cd ~/build-raspberrypi5/bookworm-gpio    ( Build gpio and pn532nfc image )

22. cd ~/build-raspberrypi5/bookworm-uefi    ( Build bookworm-uefi image )

23. cd ~/build-raspberrypi5/trixie-uefi      ( Build prerelease trixie-uefi image )

24. cd ~/build-raspberrypi5/android          ( Build android image )

25. cd ~/build-raspberrypi5/pios-bookworm    ( Build PI OS bookworm using rpi-imager )
