This is to build sdcard image for Raspberrypi5:

Parts needed:
1. Raspberry pi 5.
2. Sandisk 64GB SATA SSD with USB cable.
3. Sandisk 64GB micro sdcard.
4. Host PC with ubuntu 22 and 24.

Note: If keyboard/mouse USB dongle interfere with USB SATA SSD, put keyboard/mouse USB dongle in USB3 socket with USB extension cord.

Note: Compile debian and ubuntu-jammy using host PC with ubuntu 22 (amd64 jammy).
      Compile ubuntu-noble and ubuntu-oracular using host PC with ubuntu 24 (amd64 noble).
      Compile ubuntu-noble and ubuntu-oracular using lb version 3.0~a57-1.
      Compile debian and ubuntu-jammy using lb version 20230502.

Note: Debian uses bootcode.bin with vendor's kernel because mesa 22 is not compatible with mainline kernel. 
      Ubuntu uses uefi boot with mainline kernel ( mesa >= 23 ).

Steps to build raspberrypi5 sdcard image:

1. git clone https://github.com/philipchen888/build-raspberrypi5.git
   sudo apt-get install build-essential git libssl-dev nmap net-tools libncurses5-dev libncursesw5-dev dnsutils vsftpd ftp binfmt-support qemu-user-static scons libncurses5-dev libncursesw5-dev libdbus-glib-1-dev libbluetooth-dev python-setuptools python3-dev python3-pip python3-setuptools libcurl4-openssl-dev gettext dbus-x11 chrpath diffstat gawk texinfo curl flex bison device-tree-compiler swig libmpc-dev debootstrap debhelper kpartx gdisk devscripts isolinux po4a libgnutls28-dev mtools python-is-python3
   pip install pyelftools

2. Install cross compiler and live-build:
   wget https://releases.linaro.org/components/toolchain/binaries/latest-7/aarch64-linux-gnu/gcc-linaro-7.5.0-2019.12-x86_64_aarch64-linux-gnu.tar.xz
   sudo tar xvf gcc-linaro-7.5.0-2019.12-x86_64_aarch64-linux-gnu.tar.xz  -C /usr/local/
   wget https://releases.linaro.org/components/toolchain/binaries/latest-7/arm-linux-gnueabihf/gcc-linaro-7.5.0-2019.12-x86_64_arm-linux-gnueabihf.tar.xz
   sudo tar xvf gcc-linaro-7.5.0-2019.12-x86_64_arm-linux-gnueabihf.tar.xz -C /usr/local/
   wget https://developer.arm.com/-/media/Files/downloads/gnu/13.3.rel1/binrel/arm-gnu-toolchain-13.3.rel1-x86_64-aarch64-none-linux-gnu.tar.xz
   sudo tar -xJf arm-gnu-toolchain-13.3.rel1-x86_64-aarch64-none-linux-gnu.tar.xz -C /usr/local/

   sudo apt-get install debootstrap debhelper kpartx gdisk devscripts dh-systemd isolinux po4a

   For ubuntu-noble and ubuntu-oracular
   wget http://security.ubuntu.com/ubuntu/pool/main/l/live-build/live-build_3.0~a57-1ubuntu41.22.04.1_all.deb
   sudo dpkg -i live-build_3.0~a57-1ubuntu41.22.04.1_all.deb
   lb --version ( 3.0~a57-1 /usr/bin/lb )

   For debian and ubuntu-jammy:
   wget https://launchpad.net/debian/+archive/primary/+sourcefiles/live-build/1:20230502/live-build_20230502.tar.xz
   tar xvf live-build_20230502.tar.xz
   cd live-build
   vi Makefile ( search Installing manpages, delete from after done before uninstall: )
   sudo make install

3. cd ~/build-raspberrypi5/kernel ( Compile vendor's kernel )
   git clone https://github.com/raspberrypi/linux --depth=1
   vi ./linux/arch/arm64/configs/bcm2711_defconfig ( change CONFIG_I2C_CHARDEV=m to CONFIG_I2C_CHARDEV=y )
   \rm -rf out; mkdir out; 

   make kernel
   The result is in ./out/boot.img

4. cd ~/build-raspberrypi5/linux  ( Compile mainline kernel )
   wget https://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git/snapshot/linux-6.13-rc2.tar.gz
   tar -xzf linux-6.13-rc2.tar.gz
   mv linux-6.8-rc4 linux
   \rm -rf out; mkdir out;

   make kernel
   The result is in ./out/boot.img

5. cd ~/build-raspberrypi5/rootfs-bookworm  ( Compile debian bookworm rootfs )
   make rootfs
   The result is in ./linaro-rootfs.img
   make clean

6. cd ~/build-raspberrypi5/rootfs-ubuntu-jammy  ( Compile ubuntu-jammy rootfs )
   make rootfs
   The results are in ./linaro-rootfs.img  linaro-esp.img
   make clean

7. cd ~/build-raspberrypi5/rootfs-ubuntu-noble  ( Compile ubuntu-noble rootfs )
   make rootfs
   The results are in ./linaro-rootfs.img  linaro-esp.img
   make clean

8. cd ~/build-raspberrypi5/rootfs-ubuntu-oracular  ( Compile ubuntu-oracular rootfs )
   make rootfs
   The results are in ./linaro-rootfs.img  linaro-esp.img
   make clean

9. cd ~/build-raspberrypi5/bookworm-gnome  ( Build debian bookworm gnome-desktop image )
   Plugin sdcard/USB2-SATA-SSD to PC.
   sudo ./mksdcardimg.sh
   Eject sdcard/USB2-SATA-SSD from PC.

10. cd ~/build-raspberrypi5/ubuntu-jammy  ( Build ubuntu-jammy image )
    Plugin sdcard/USB2-SATA-SSD to PC.
    sudo ./mksdcardimg.sh   ( sudo ./mkusbimg.sh for USB2-SATA-SSD )
    Eject sdcard/USB2-SATA-SSD from PC.

11. cd ~/build-raspberrypi5/ubuntu-noble  ( Build ubuntu-noble image )
    Plugin sdcard/USB2-SATA-SSD to PC.
    sudo ./mksdcardimg.sh   ( sudo ./mkusbimg.sh for USB2-SATA-SSD )
    Eject sdcard/USB2-SATA-SSD from PC.

12. cd ~/build-raspberrypi5/ubuntu-oracular  ( Build ubuntu-oracular image )
    Plugin sdcard/USB2-SATA-SSD to PC.
    sudo ./mksdcardimg.sh   ( sudo ./mkusbimg.sh for USB2-SATA-SSD )
    Eject sdcard/USB2-SATA-SSD from PC.

13. cd ~/build-raspberrypi5/bookworm-uefi   ( Build bookworm-uefi image )

14. cd ~/build-raspberrypi5/fedora          ( Build fedora image )

15. cd ~/build-raspberrypi5/ubuntu-uefi     ( Build ubuntu-uefi image )
